/**************************************************************************
File Name               : siglib_memory_sections.h  | Author : JOHN EDWARDS
Siglib Library Version  : 8.60                      |
----------------------------------------+----------------------------------
Compiler  : Independent                 | Start Date    : 27/12/99
Options   :                             | Latest Update : 02/01/17
---------------------------------------------------------------------------
Support for SigLib is available via EMail : support@numerix-dsp.com

This file may be modified, in any way, providing that this header remains
within the file and none of the header contents are removed or modified.

THIS FILE MAY ONLY BE USED IN ACCORDANCE WITH THE TERMS OF THE NUMERIX LTD.
END USER LICENSE AGREEMENT.
DELETION OF ANY INFORMATION IN THIS HEADER IS IN VIOLATION OF YOUR LICENSE.

Copyright (C) 1992 to 2017 Sigma Numerix Ltd.
---------------------------------------------------------------------------
Description : SigLib function memory section definition file for TI compilers
    This file includes a memory section definition line for each function in
    the library.
    Each function can be located in a separate section of memory.

Update history :
        See history.txt for more details.

****************************************************************************/

#if SIGLIB

#ifndef     _SIGLIB_MEMORY_SECTIONS_H
#define     _SIGLIB_MEMORY_SECTIONS_H

#ifdef _TMS320C6X           /* Defined by TI compiler */
#ifndef __cplusplus         /* These macros don't work in C++, you need to locate them adjacent to the function */

/* siglib.c */
#pragma CODE_SECTION(SUF_SiglibVersion, ".text")
#pragma CODE_SECTION(SUF_ClearDebugfprintf, ".text")
#pragma CODE_SECTION(SUF_PrintArray, ".text")
#pragma CODE_SECTION(SUF_PrintComplexArray, ".text")
#pragma CODE_SECTION(SUF_PrintMatrix, ".text")
#pragma CODE_SECTION(SUF_PrintPolar, ".text")
#pragma CODE_SECTION(SUF_PrintRectangular, ".text")
#pragma CODE_SECTION(SUF_PrintIIRCoefficients, ".text")
#pragma CODE_SECTION(SUF_Debugfprintf, ".text")
#pragma CODE_SECTION(SUF_Debugvfprintf, ".text")
#pragma CODE_SECTION(SUF_DebugPrintArray, ".text")
#pragma CODE_SECTION(SUF_DebugPrintComplexArray, ".text")
#pragma CODE_SECTION(SUF_DebugPrintMatrix, ".text")
#pragma CODE_SECTION(SUF_DebugPrintPolar, ".text")
#pragma CODE_SECTION(SUF_DebugPrintRectangular, ".text")
#pragma CODE_SECTION(SUF_DebugPrintIIRCoefficients, ".text")
#pragma CODE_SECTION(SUF_MSDelay, ".text")
#pragma CODE_SECTION(SUF_StrError, ".text")
/* ffourier.c */
#pragma CODE_SECTION(SIF_Fft, ".text")
#pragma CODE_SECTION(SDA_Rfft, ".text")
#pragma CODE_SECTION(SDA_Cfft, ".text")
#pragma CODE_SECTION(SDA_Cifft, ".text")
#pragma CODE_SECTION(SDA_BitReverseReorder, ".text")
#pragma CODE_SECTION(SDA_IndexBitReverseReorder, ".text")
#pragma CODE_SECTION(SIF_FastBitReverseReorder, ".text")
#pragma CODE_SECTION(SDA_RealRealCepstrum, ".text")
#pragma CODE_SECTION(SDA_RealComplexCepstrum, ".text")
#pragma CODE_SECTION(SDA_ComplexComplexCepstrum, ".text")
#pragma CODE_SECTION(SIF_FftTone, ".text")
#pragma CODE_SECTION(SDA_RfftTone, ".text")
/* fourier.c */
#pragma CODE_SECTION(SIF_ZoomFft, ".text")
#pragma CODE_SECTION(SDA_ZoomFft, ".text")
#pragma CODE_SECTION(SIF_ZoomFftSimple, ".text")
#pragma CODE_SECTION(SDA_ZoomFftSimple, ".text")
#pragma CODE_SECTION(SIF_FdHilbert, ".text")
#pragma CODE_SECTION(SDA_FdHilbert, ".text")
#pragma CODE_SECTION(SIF_FdAnalytic, ".text")
#pragma CODE_SECTION(SDA_FdAnalytic, ".text")
#pragma CODE_SECTION(SDA_InstantFreq, ".text")
#pragma CODE_SECTION(SDA_Rft, ".text")
#pragma CODE_SECTION(SDA_Rift, ".text")
#pragma CODE_SECTION(SDA_Cft, ".text")
#pragma CODE_SECTION(SDA_Cift, ".text")
#pragma CODE_SECTION(SDA_FftShift, ".text")
#pragma CODE_SECTION(SDA_CfftShift, ".text")
#pragma CODE_SECTION(SDA_FftExtend, ".text")
#pragma CODE_SECTION(SDA_CfftExtend, ".text")
/* arbfft.c */
#pragma CODE_SECTION(SIF_ArbFft, ".text")
#pragma CODE_SECTION(SUF_ArbFftAllocLength, ".text")
#pragma CODE_SECTION(SDA_ArbRfft, ".text")
#pragma CODE_SECTION(SDA_ArbCfft, ".text")
#pragma CODE_SECTION(SDA_ArbCifft, ".text")
/* pspect.c */
#pragma CODE_SECTION(SIF_FastAutoCrossPowerSpectrum, ".text")
#pragma CODE_SECTION(SDA_FastAutoPowerSpectrum, ".text")
#pragma CODE_SECTION(SDA_FastCrossPowerSpectrum, ".text")
#pragma CODE_SECTION(SIF_ArbAutoCrossPowerSpectrum, ".text")
#pragma CODE_SECTION(SDA_ArbAutoPowerSpectrum, ".text")
#pragma CODE_SECTION(SDA_ArbCrossPowerSpectrum, ".text")
#pragma CODE_SECTION(SIF_WelchPowerSpectrum, ".text")
#pragma CODE_SECTION(SDA_WelchRealPowerSpectrum, ".text")
#pragma CODE_SECTION(SDA_WelchComplexPowerSpectrum, ".text")
#pragma CODE_SECTION(SIF_MagnitudeSquaredCoherence, ".text")
#pragma CODE_SECTION(SDA_MagnitudeSquaredCoherence, ".text")
/* fdfilter.c */
#pragma CODE_SECTION(SIF_FirOverlapAdd, ".text")
#pragma CODE_SECTION(SDA_FirOverlapAdd, ".text")
#pragma CODE_SECTION(SIF_FirOverlapSave, ".text")
#pragma CODE_SECTION(SDA_FirOverlapSave, ".text")
#pragma CODE_SECTION(SIF_FftConvolvePre, ".text")
#pragma CODE_SECTION(SDA_FftConvolvePre, ".text")
#pragma CODE_SECTION(SDA_FftConvolveArb, ".text")
#pragma CODE_SECTION(SIF_FftCorrelatePre, ".text")
#pragma CODE_SECTION(SDA_FftCorrelatePre, ".text")
#pragma CODE_SECTION(SDA_FftCorrelateArb, ".text")
/* chirpz.c */
#pragma CODE_SECTION(SIF_Czt, ".text")
#pragma CODE_SECTION(SIF_Awn, ".text")
#pragma CODE_SECTION(SIF_Vl, ".text")
#pragma CODE_SECTION(SIF_Wm, ".text")
/* window.c */
#pragma CODE_SECTION(SIF_Window, ".text")
#pragma CODE_SECTION(SDA_Window, ".text")
#pragma CODE_SECTION(SDA_ComplexWindow, ".text")
#pragma CODE_SECTION(SDA_WindowInverseCoherentGain, ".text")
#pragma CODE_SECTION(SDS_I0Bessel, ".text")
/* firfilt.c */
#pragma CODE_SECTION(SIF_Fir, ".text")
#pragma CODE_SECTION(SDS_Fir, ".text")
#pragma CODE_SECTION(SDA_Fir, ".text")
#pragma CODE_SECTION(SDS_FirAddSample, ".text")
#pragma CODE_SECTION(SDA_FirAddSamples, ".text")
#pragma CODE_SECTION(SIF_Comb, ".text")
#pragma CODE_SECTION(SDS_Comb, ".text")
#pragma CODE_SECTION(SDA_Comb, ".text")
#pragma CODE_SECTION(SIF_FirComplex, ".text")
#pragma CODE_SECTION(SDS_FirComplex, ".text")
#pragma CODE_SECTION(SDA_FirComplex, ".text")
#pragma CODE_SECTION(SIF_FirWithStore, ".text")
#pragma CODE_SECTION(SDS_FirWithStore, ".text")
#pragma CODE_SECTION(SDA_FirWithStore, ".text")
#pragma CODE_SECTION(SIF_FirComplexWithStore, ".text")
#pragma CODE_SECTION(SDS_FirComplexWithStore, ".text")
#pragma CODE_SECTION(SDA_FirComplexWithStore, ".text")
#pragma CODE_SECTION(SDS_FirAddSampleWithStore, ".text")
#pragma CODE_SECTION(SDA_FirAddSamplesWithStore, ".text")
#pragma CODE_SECTION(SIF_FirExtendedArray, ".text")
#pragma CODE_SECTION(SDS_FirExtendedArray, ".text")
#pragma CODE_SECTION(SDS_FirExtendedArray, ".text")
#pragma CODE_SECTION(SIF_FirComplexExtendedArray, ".text")
#pragma CODE_SECTION(SDS_FirComplexExtendedArray, ".text")
#pragma CODE_SECTION(SDS_FirComplexExtendedArray, ".text")
#pragma CODE_SECTION(SDS_FirAddSampleExtendedState, ".text")
#pragma CODE_SECTION(SDA_FirAddSamplesExtendedState, ".text")
#pragma CODE_SECTION(SIF_LowPassFirFilter, ".text")
#pragma CODE_SECTION(SIF_HighPassFirFilter, ".text")
#pragma CODE_SECTION(SIF_BandPassFirFilter, ".text")
#pragma CODE_SECTION(SIF_LowPassFirFilterWindow, ".text")
#pragma CODE_SECTION(SIF_HighPassFirFilterWindow, ".text")
#pragma CODE_SECTION(SIF_BandPassFirFilterWindow, ".text")
#pragma CODE_SECTION(SUF_KaiserApproximation, ".text")
#pragma CODE_SECTION(SIF_MatchedFirFilter, ".text")
#pragma CODE_SECTION(SDA_FirFilterInverseCoherentGain, ".text")
#pragma CODE_SECTION(SIF_TappedDelayLine, ".text")
#pragma CODE_SECTION(SDS_TappedDelayLine, ".text")
#pragma CODE_SECTION(SDA_TappedDelayLine, ".text")
#pragma CODE_SECTION(SIF_TappedDelayLineComplex, ".text")
#pragma CODE_SECTION(SDS_TappedDelayLineComplex, ".text")
#pragma CODE_SECTION(SDA_TappedDelayLineComplex, ".text")
#pragma CODE_SECTION(SIF_TappedDelayLineIQ, ".text")
#pragma CODE_SECTION(SDS_TappedDelayLineIQ, ".text")
#pragma CODE_SECTION(SDA_TappedDelayLineIQ, ".text")
#pragma CODE_SECTION(SIF_FirPolyPhaseGenerate, ".text")
/* iirfilt.c */
#pragma CODE_SECTION(SIF_Iir, ".text")
#pragma CODE_SECTION(SDS_Iir, ".text")
#pragma CODE_SECTION(SDA_Iir, ".text")
#pragma CODE_SECTION(SDS_IirMac, ".text")
#pragma CODE_SECTION(SDA_IirMac, ".text")
#pragma CODE_SECTION(SIF_OrderNIir, ".text")
#pragma CODE_SECTION(SDS_OrderNIir, ".text")
#pragma CODE_SECTION(SDA_OrderNIir, ".text")
#pragma CODE_SECTION(SIF_NcIir, ".text")
#pragma CODE_SECTION(SDA_NcIir, ".text")
#pragma CODE_SECTION(SDA_BilinearTransform, ".text")
#pragma CODE_SECTION(SDS_PreWarp, ".text")
#pragma CODE_SECTION(SDA_MatchedZTransform, ".text")
#pragma CODE_SECTION(SDA_IirZplaneToCoeffs, ".text")
#pragma CODE_SECTION(SDA_IirZplanePolarToCoeffs, ".text")
#pragma CODE_SECTION(SDA_IirZplaneLpfToLpf, ".text")
#pragma CODE_SECTION(SDA_IirZplaneLpfToHpf, ".text")
#pragma CODE_SECTION(SDA_IirZplaneLpfToBpf, ".text")
#pragma CODE_SECTION(SDA_IirZplaneLpfToBsf, ".text")
#pragma CODE_SECTION(SDA_ModifyIirFilterGain, ".text")
#pragma CODE_SECTION(SIF_LowPassIirFilter, ".text")
#pragma CODE_SECTION(SIF_HighPassIirFilter, ".text")
#pragma CODE_SECTION(SIF_AllPassIirFilter, ".text")
#pragma CODE_SECTION(SIF_BandPassIirFilter, ".text")
#pragma CODE_SECTION(SIF_NotchIirFilter, ".text")
#pragma CODE_SECTION(SIF_PeakingIirFilter, ".text")
#pragma CODE_SECTION(SIF_LowShelfIirFilter, ".text")
#pragma CODE_SECTION(SIF_HighShelfIirFilter, ".text")
#pragma CODE_SECTION(SDS_RemoveDC, ".text")
#pragma CODE_SECTION(SDA_RemoveDC, ".text")
#pragma CODE_SECTION(SIF_OnePole, ".text")
#pragma CODE_SECTION(SDS_OnePole, ".text")
#pragma CODE_SECTION(SDA_OnePole, ".text")
#pragma CODE_SECTION(SDS_OnePoleNormalized, ".text")
#pragma CODE_SECTION(SDA_OnePoleNormalized, ".text")
#pragma CODE_SECTION(SDA_OnePolePerSample, ".text")
#pragma CODE_SECTION(SDS_TimeConstantToOnePoleFilterCoeff, ".text")
#pragma CODE_SECTION(SDS_CutOffFrequencyToOnePoleFilterCoeff, ".text")
#pragma CODE_SECTION(SIF_AllPole, ".text")
#pragma CODE_SECTION(SDS_AllPole, ".text")
#pragma CODE_SECTION(SDA_AllPole, ".text")
#pragma CODE_SECTION(SDA_ZDomainCoefficientReorg, ".text")
#pragma CODE_SECTION(SIF_IirNotchFilter, ".text")
#pragma CODE_SECTION(SIF_IirNormalizedCoefficients, ".text")
#pragma CODE_SECTION(SIF_IirNormalizedSPlaneCoefficients, ".text")
#pragma CODE_SECTION(SDA_TranslateSPlaneCutOffFrequency, ".text")
#pragma CODE_SECTION(SDA_IirLpLpShift, ".text")
#pragma CODE_SECTION(SDA_IirLpHpShift, ".text")
#pragma CODE_SECTION(SIF_Iir2PoleLpf, ".text")
#pragma CODE_SECTION(SDS_Iir2Pole, ".text")
#pragma CODE_SECTION(SDA_Iir2Pole, ".text")
#pragma CODE_SECTION(SDA_IirNegateAlphaCoeffs, ".text")
/* filter.c */
#pragma CODE_SECTION(SDA_Integrate, ".text")
#pragma CODE_SECTION(SDA_Differentiate, ".text")
#pragma CODE_SECTION(SIF_LeakyIntegrator, ".text")
#pragma CODE_SECTION(SDS_LeakyIntegrator1, ".text")
#pragma CODE_SECTION(SDS_LeakyIntegrator2, ".text")
#pragma CODE_SECTION(SIF_HilbertTransformer, ".text")
#pragma CODE_SECTION(SIF_GoertzelFilter, ".text")
#pragma CODE_SECTION(SDA_GoertzelFilter, ".text")
#pragma CODE_SECTION(SDS_GoertzelFilter, ".text")
#pragma CODE_SECTION(SIF_GoertzelDetect, ".text")
#pragma CODE_SECTION(SDA_GoertzelDetect, ".text")
#pragma CODE_SECTION(SIF_GoertzelDetectComplex, ".text")
#pragma CODE_SECTION(SDA_GoertzelDetectComplex, ".text")
#pragma CODE_SECTION(SIF_GaussianFilter, ".text")
#pragma CODE_SECTION(SIF_GaussianFilter2, ".text")
#pragma CODE_SECTION(SIF_RaisedCosineFilter, ".text")
#pragma CODE_SECTION(SIF_RootRaisedCosineFilter, ".text")
#pragma CODE_SECTION(SDS_ZTransform, ".text")
#pragma CODE_SECTION(SDS_ZTransformDB, ".text")
#pragma CODE_SECTION(SUF_EstimateBPFilterLength, ".text")
#pragma CODE_SECTION(SUF_EstimateBPFilterError, ".text")
/* adaptive.c */
#pragma CODE_SECTION(SIF_Lms, ".text")
#pragma CODE_SECTION(SDS_Lms, ".text")
#pragma CODE_SECTION(SDA_LmsUpdate, ".text")
#pragma CODE_SECTION(SDA_LeakyLmsUpdate, ".text")
#pragma CODE_SECTION(SDA_NormalizedLmsUpdate, ".text")
#pragma CODE_SECTION(SDA_SignErrorLmsUpdate, ".text")
#pragma CODE_SECTION(SDA_SignDataLmsUpdate, ".text")
#pragma CODE_SECTION(SDA_SignSignLmsUpdate, ".text")
/* convolve.c */
#pragma CODE_SECTION(SDA_ConvolveLinear, ".text")
#pragma CODE_SECTION(SDA_ConvolvePartial, ".text")
#pragma CODE_SECTION(SDA_ConvolveCircular, ".text")
#pragma CODE_SECTION(SDA_ConvolveLinearComplex, ".text")
#pragma CODE_SECTION(SDA_ConvolvePartialComplex, ".text")
#pragma CODE_SECTION(SDA_ConvolveCircularComplex, ".text")
#pragma CODE_SECTION(SDA_Deconvolution, ".text")
/* correlat.c */
#pragma CODE_SECTION(SDA_CorrelateLinear, ".text")
#pragma CODE_SECTION(SDA_CorrelatePartial, ".text")
#pragma CODE_SECTION(SDA_CorrelateCircular, ".text")
#pragma CODE_SECTION(SDA_Covariance, ".text")
#pragma CODE_SECTION(SDA_CovariancePartial, ".text")
#pragma CODE_SECTION(SDA_CorrelateLinearReturnPeak, ".text")
/* delay.c */
#pragma CODE_SECTION(SIF_FixedDelay, ".text")
#pragma CODE_SECTION(SDS_FixedDelay, ".text")
#pragma CODE_SECTION(SDA_FixedDelay, ".text")
#pragma CODE_SECTION(SIF_FixedDelayComplex, ".text")
#pragma CODE_SECTION(SDS_FixedDelayComplex, ".text")
#pragma CODE_SECTION(SDA_FixedDelayComplex, ".text")
#pragma CODE_SECTION(SDA_ShortFixedDelay, ".text")
#pragma CODE_SECTION(SIF_VariableDelay, ".text")
#pragma CODE_SECTION(SDS_VariableDelay, ".text")
#pragma CODE_SECTION(SDA_VariableDelay, ".text")
#pragma CODE_SECTION(SIF_VariableDelayComplex, ".text")
#pragma CODE_SECTION(SDS_VariableDelayComplex, ".text")
#pragma CODE_SECTION(SDA_VariableDelayComplex, ".text")
#pragma CODE_SECTION(SUF_IncreaseVariableDelay, ".text")
#pragma CODE_SECTION(SUF_DecreaseVariableDelay, ".text")
#pragma CODE_SECTION(SDA_Align, ".text")
/* image.c */
#pragma CODE_SECTION(SIM_Fft2d, ".text")
#pragma CODE_SECTION(SIF_Fft2d, ".text")
#pragma CODE_SECTION(SIM_Conv3x3, ".text")
#pragma CODE_SECTION(SIM_Sobel3x3, ".text")
#pragma CODE_SECTION(SIM_SobelVertical3x3, ".text")
#pragma CODE_SECTION(SIM_SobelHorizontal3x3, ".text")
#pragma CODE_SECTION(SIM_Median3x3, ".text")
#pragma CODE_SECTION(SIF_ConvCoefficients3x3, ".text")
#pragma CODE_SECTION(SIM_Max, ".text")
#pragma CODE_SECTION(SIM_Min, ".text")
/* icoder.c */
#pragma CODE_SECTION(SIF_Dct8x8, ".text")
#pragma CODE_SECTION(SIM_Dct8x8, ".text")
#pragma CODE_SECTION(SIM_Idct8x8, ".text")
#pragma CODE_SECTION(SIM_ZigZagScan, ".text")
#pragma CODE_SECTION(SIM_ZigZagDescan, ".text")
/* siggen.c */
#pragma CODE_SECTION(SDA_SignalGenerate, ".text")
#pragma CODE_SECTION(SDS_SignalGenerate, ".text")
#pragma CODE_SECTION(SIF_Resonator, ".text")
#pragma CODE_SECTION(SDA_Resonator, ".text")
#pragma CODE_SECTION(SIF_Resonator1, ".text")
#pragma CODE_SECTION(SDA_Resonator1, ".text")
#pragma CODE_SECTION(SDA_Resonator1Add, ".text")
#pragma CODE_SECTION(SDA_SignalGeneratePolarWhiteNoise, ".text")
#pragma CODE_SECTION(SDS_SignalGeneratePolarWhiteNoise, ".text")
#pragma CODE_SECTION(SDA_SignalGeneratePolarGaussianNoise, ".text")
#pragma CODE_SECTION(SDS_SignalGeneratePolarGaussianNoise, ".text")
#pragma CODE_SECTION(SDA_SignalAddPolarJitterAndGaussianNoise, ".text")
#pragma CODE_SECTION(SDS_SignalAddPolarJitterAndGaussianNoise, ".text")
/* comms.c */
#pragma CODE_SECTION(SDA_BitErrorRate, ".text")
#pragma CODE_SECTION(SDA_Interleave, ".text")
#pragma CODE_SECTION(SDA_Deinterleave, ".text")
#pragma CODE_SECTION(SDS_EuclideanDistance, ".text")
#pragma CODE_SECTION(SDS_EuclideanDistanceSquared, ".text")
#pragma CODE_SECTION(SDS_ManchesterEncode, ".text")
#pragma CODE_SECTION(SDS_ManchesterDecode, ".text")
#pragma CODE_SECTION(SDS_ManchesterEncodeByte, ".text")
#pragma CODE_SECTION(SDS_ManchesterDecodeByte, ".text")
#pragma CODE_SECTION(SIF_DetectNumericalWordSequence, ".text")
#pragma CODE_SECTION(SDS_DetectNumericalWordSequence, ".text")
#pragma CODE_SECTION(SIF_DetectNumericalBitSequence, ".text")
#pragma CODE_SECTION(SDS_DetectNumericalBitSequence, ".text")
#pragma CODE_SECTION(SIF_DetectCharacterSequence, ".text")
#pragma CODE_SECTION(SDS_DetectCharacterSequence, ".text")
#pragma CODE_SECTION(SDS_ErrorVector, ".text")
#pragma CODE_SECTION(SDS_ErrorVectorMagnitudePercent, ".text")
#pragma CODE_SECTION(SDS_ErrorVectorMagnitudeDecibels, ".text")
#pragma CODE_SECTION(SDS_ReverseDiBits, ".text")
#pragma CODE_SECTION(SDS_QpskBitErrorCount, ".text")
#pragma CODE_SECTION(SDS_BitErrorRate, ".text")
/* timing.c */
#pragma CODE_SECTION(SIF_PhaseLockedLoop, ".text")
#pragma CODE_SECTION(SDS_PhaseLockedLoop, ".text")
#pragma CODE_SECTION(SDA_PhaseLockedLoop, ".text")
#pragma CODE_SECTION(SIF_CostasLoop, ".text")
#pragma CODE_SECTION(SDS_CostasLoop, ".text")
#pragma CODE_SECTION(SDA_CostasLoop, ".text")
#pragma CODE_SECTION(SRF_CostasLoop, ".text")
#pragma CODE_SECTION(SIF_180DegreePhaseDetect, ".text")
#pragma CODE_SECTION(SDA_180DegreePhaseDetect, ".text")
#pragma CODE_SECTION(SIF_TriggerReverberator, ".text")
#pragma CODE_SECTION(SDA_TriggerReverberator, ".text")
#pragma CODE_SECTION(SDS_TriggerReverberator, ".text")
#pragma CODE_SECTION(SDA_TriggerSelector, ".text")
#pragma CODE_SECTION(SIF_EarlyLateGate, ".text")
#pragma CODE_SECTION(SDA_EarlyLateGate, ".text")
#pragma CODE_SECTION(SDA_EarlyLateGateDebug, ".text")
#pragma CODE_SECTION(SDS_EarlyLateGate, ".text")
#pragma CODE_SECTION(SIF_EarlyLateGateSquarePulse, ".text")
#pragma CODE_SECTION(SDA_EarlyLateGateSquarePulse, ".text")
#pragma CODE_SECTION(SDA_EarlyLateGateSquarePulseDebug, ".text")
#pragma CODE_SECTION(SDS_EarlyLateGateSquarePulse, ".text")
/* viterbi.c */
#pragma CODE_SECTION(SDS_ConvEncoderK3, ".text")
#pragma CODE_SECTION(SIF_ViterbiDecoderK3, ".text")
#pragma CODE_SECTION(SDS_ViterbiDecoderK3, ".text")
#pragma CODE_SECTION(SDS_ConvEncoderV32, ".text")
#pragma CODE_SECTION(SIF_ViterbiDecoderV32, ".text")
#pragma CODE_SECTION(SDS_ViterbiDecoderV32, ".text")
/* mod_a.c */
#pragma CODE_SECTION(SDA_AmplitudeModulate, ".text")
#pragma CODE_SECTION(SIF_ComplexShift, ".text")
#pragma CODE_SECTION(SDA_ComplexShift, ".text")
#pragma CODE_SECTION(SIF_FrequencyModulate, ".text")
#pragma CODE_SECTION(SDS_FrequencyModulate, ".text")
#pragma CODE_SECTION(SDA_FrequencyModulate, ".text")
#pragma CODE_SECTION(SDA_FrequencyDemodulate, ".text")
#pragma CODE_SECTION(SIF_FrequencyModulateComplex, ".text")
#pragma CODE_SECTION(SDS_FrequencyModulateComplex, ".text")
#pragma CODE_SECTION(SDA_FrequencyModulateComplex, ".text")
#pragma CODE_SECTION(SDA_DeltaModulate, ".text")
#pragma CODE_SECTION(SDA_DeltaDemodulate, ".text")
#pragma CODE_SECTION(SDA_DeltaModulate2, ".text")
/* mod_d.c */
#pragma CODE_SECTION(SIF_CostasQamDemodulate, ".text")
#pragma CODE_SECTION(SDS_CostasQamDemodulate, ".text")
#pragma CODE_SECTION(SDS_CostasQamDemodulateDebug, ".text")
#pragma CODE_SECTION(SDA_CostasQamDemodulate, ".text")
#pragma CODE_SECTION(SDA_CostasQamDemodulateDebug, ".text")
#pragma CODE_SECTION(SIF_QpskModulate, ".text")
#pragma CODE_SECTION(SDA_QpskModulate, ".text")
#pragma CODE_SECTION(SIF_QpskDemodulate, ".text")
#pragma CODE_SECTION(SDA_QpskDemodulate, ".text")
#pragma CODE_SECTION(SDA_QpskDemodulateDebug, ".text")
#pragma CODE_SECTION(SDA_QpskDifferentialEncode, ".text")
#pragma CODE_SECTION(SDA_QpskDifferentialDecode, ".text")
#pragma CODE_SECTION(SIF_FskModulate, ".text")
#pragma CODE_SECTION(SDA_FskModulateByte, ".text")
#pragma CODE_SECTION(SDA_FskDemodulateByte, ".text")
#pragma CODE_SECTION(SDA_CpfskModulateByte, ".text")
#pragma CODE_SECTION(SDA_FskModulate, ".text")
#pragma CODE_SECTION(SDA_FskDemodulate, ".text")
#pragma CODE_SECTION(SDA_CpfskModulate, ".text")
#pragma CODE_SECTION(SIF_Qam16Modulate, ".text")
#pragma CODE_SECTION(SDA_Qam16Modulate, ".text")
#pragma CODE_SECTION(SIF_Qam16Demodulate, ".text")
#pragma CODE_SECTION(SDA_Qam16Demodulate, ".text")
#pragma CODE_SECTION(SDA_Qam16DemodulateDebug, ".text")
#pragma CODE_SECTION(SDA_Qam16DifferentialEncode, ".text")
#pragma CODE_SECTION(SDA_Qam16DifferentialDecode, ".text")
#pragma CODE_SECTION(SIF_BpskModulate, ".text")
#pragma CODE_SECTION(SDA_BpskModulate, ".text")
#pragma CODE_SECTION(SDA_BpskModulateByte, ".text")
#pragma CODE_SECTION(SIF_BpskDemodulate, ".text")
#pragma CODE_SECTION(SDA_BpskDemodulate, ".text")
#pragma CODE_SECTION(SDA_BpskDemodulateDebug, ".text")
#pragma CODE_SECTION(SIF_DpskModulate, ".text")
#pragma CODE_SECTION(SDA_DpskModulate, ".text")
#pragma CODE_SECTION(SDA_DpskModulateByte, ".text")
#pragma CODE_SECTION(SIF_DpskDemodulate, ".text")
#pragma CODE_SECTION(SDA_DpskDemodulate, ".text")
#pragma CODE_SECTION(SDA_DpskDemodulateDebug, ".text")
#pragma CODE_SECTION(SIF_PiByFourDQpskModulate, ".text")
#pragma CODE_SECTION(SDA_PiByFourDQpskModulate, ".text")
#pragma CODE_SECTION(SDS_ChannelizationCode, ".text")
#pragma CODE_SECTION(SDA_ComplexQPSKSpread, ".text")
#pragma CODE_SECTION(SDA_ComplexQPSKDeSpread, ".text")
/* modem.c */
#pragma CODE_SECTION(SUF_AsyncCharacterLength, ".text")
#pragma CODE_SECTION(SDA_SyncToAsyncConverter, ".text")
#pragma CODE_SECTION(SDA_AsyncToSyncConverter, ".text")
#pragma CODE_SECTION(SIF_AsyncAddRemoveStopBits, ".text")
#pragma CODE_SECTION(SDA_AsyncRemoveStopBits, ".text")
#pragma CODE_SECTION(SDA_AsyncAddStopBits, ".text")
#pragma CODE_SECTION(SDA_DecreaseWordLength, ".text")
#pragma CODE_SECTION(SDA_IncreaseWordLength, ".text")
/* prbs.c */
#pragma CODE_SECTION(SDS_Scrambler1417, ".text")
#pragma CODE_SECTION(SDS_Descrambler1417, ".text")
#pragma CODE_SECTION(SDS_Scrambler1417WithInversion, ".text")
#pragma CODE_SECTION(SDS_Descrambler1417WithInversion, ".text")
#pragma CODE_SECTION(SDS_Scrambler1823, ".text")
#pragma CODE_SECTION(SDS_Descrambler1823, ".text")
#pragma CODE_SECTION(SDS_Scrambler523, ".text")
#pragma CODE_SECTION(SDS_Descrambler523, ".text")
#pragma CODE_SECTION(SDS_ScramblerDescramblerPN9, ".text")
#pragma CODE_SECTION(SDS_SequenceGeneratorPN9, ".text")
#pragma CODE_SECTION(SDS_ScramblerDescramblerPN15, ".text")
#pragma CODE_SECTION(SDS_SequenceGeneratorPN15, ".text")
#pragma CODE_SECTION(SDS_ScramblerDescramblergCRC24, ".text")
#pragma CODE_SECTION(SDS_SequenceGeneratorgCRC24, ".text")
#pragma CODE_SECTION(SDS_ScramblerDescramblergCRC16, ".text")
#pragma CODE_SECTION(SDS_SequenceGeneratorgCRC16, ".text")
#pragma CODE_SECTION(SDS_ScramblerDescramblergCRC12, ".text")
#pragma CODE_SECTION(SDS_SequenceGeneratorgCRC12, ".text")
#pragma CODE_SECTION(SDS_ScramblerDescramblergCRC8, ".text")
#pragma CODE_SECTION(SDS_SequenceGeneratorgCRC8, ".text")
#pragma CODE_SECTION(SDS_LongCodeGenerator3GPPDL, ".text")
#pragma CODE_SECTION(SDS_LongCodeGenerator3GPPUL, ".text")
/* mux.c */
#pragma CODE_SECTION(SDA_Mux2, ".text")
#pragma CODE_SECTION(SDA_Demux2, ".text")
#pragma CODE_SECTION(SDA_Mux3, ".text")
#pragma CODE_SECTION(SDA_Demux3, ".text")
#pragma CODE_SECTION(SDA_Mux4, ".text")
#pragma CODE_SECTION(SDA_Demux4, ".text")
#pragma CODE_SECTION(SDA_Mux5, ".text")
#pragma CODE_SECTION(SDA_Demux5, ".text")
/* decint.c */
#pragma CODE_SECTION(SIF_Decimate, ".text")
#pragma CODE_SECTION(SDA_Decimate, ".text")
#pragma CODE_SECTION(SIF_Interpolate, ".text")
#pragma CODE_SECTION(SDA_Interpolate, ".text")
#pragma CODE_SECTION(SIF_FilterAndDecimate, ".text")
#pragma CODE_SECTION(SDA_FilterAndDecimate, ".text")
#pragma CODE_SECTION(SIF_InterpolateAndFilter, ".text")
#pragma CODE_SECTION(SDA_InterpolateAndFilter, ".text")
#pragma CODE_SECTION(SDA_ResampleLinear, ".text")
#pragma CODE_SECTION(SDA_ResampleLinearNSamples, ".text")
#pragma CODE_SECTION(SDA_InterpolateLinear1, ".text")
#pragma CODE_SECTION(SDA_InterpolateLinear2, ".text")
#pragma CODE_SECTION(SIF_ResampleSinc, ".text")
#pragma CODE_SECTION(SIF_ResampleWindowedSinc, ".text")
#pragma CODE_SECTION(SDA_ResampleSinc, ".text")
#pragma CODE_SECTION(SDA_ResampleSincNSamples, ".text")
#pragma CODE_SECTION(SIF_InterpolateSinc1, ".text")
#pragma CODE_SECTION(SIF_InterpolateWindowedSinc1, ".text")
#pragma CODE_SECTION(SDA_InterpolateSinc1, ".text")
#pragma CODE_SECTION(SIF_ResampleLinearContiguous, ".text")
#pragma CODE_SECTION(SDA_ResampleLinearContiguous, ".text")
#pragma CODE_SECTION(SIF_ResampleSincContiguous, ".text")
#pragma CODE_SECTION(SIF_ResampleWindowedSincContiguous, ".text")
#pragma CODE_SECTION(SDA_ResampleSincContiguous, ".text")
/* dtmf.c */
#pragma CODE_SECTION(SIF_DtmfGenerate, ".text")
#pragma CODE_SECTION(SDA_DtmfGenerate, ".text")
#pragma CODE_SECTION(SIF_DtmfDetect, ".text")
#pragma CODE_SECTION(SDA_DtmfDetect, ".text")
#pragma CODE_SECTION(SDA_DtmfDetectAndValidate, ".text")
#pragma CODE_SECTION(SUF_AsciiToKeyCode , ".text")
#pragma CODE_SECTION(SUF_KeyCodeToAscii , ".text")
/* speech.c */
#pragma CODE_SECTION(SIF_PreEmphasisFilter, ".text")
#pragma CODE_SECTION(SDA_PreEmphasisFilter, ".text")
#pragma CODE_SECTION(SIF_DeEmphasisFilter, ".text")
#pragma CODE_SECTION(SDA_DeEmphasisFilter, ".text")
#pragma CODE_SECTION(SDA_AdpcmEncoder, ".text")
#pragma CODE_SECTION(SDA_AdpcmEncoderDebug, ".text")
#pragma CODE_SECTION(SDA_AdpcmDecoder, ".text")
/* minmax.c */
#pragma CODE_SECTION(SDA_Max, ".text")
#pragma CODE_SECTION(SDA_AbsMax, ".text")
#pragma CODE_SECTION(SDA_Min, ".text")
#pragma CODE_SECTION(SDA_AbsMin, ".text")
#pragma CODE_SECTION(SDA_Middle, ".text")
#pragma CODE_SECTION(SDA_Range, ".text")
#pragma CODE_SECTION(SDA_MaxPos, ".text")
#pragma CODE_SECTION(SDA_AbsMaxPos, ".text")
#pragma CODE_SECTION(SDA_MinPos, ".text")
#pragma CODE_SECTION(SDA_AbsMinPos, ".text")
#pragma CODE_SECTION(SDS_Max, ".text")
#pragma CODE_SECTION(SDS_AbsMax, ".text")
#pragma CODE_SECTION(SDS_Min, ".text")
#pragma CODE_SECTION(SDS_AbsMin, ".text")
#pragma CODE_SECTION(SDA_Max2, ".text")
#pragma CODE_SECTION(SDA_AbsMax2, ".text")
#pragma CODE_SECTION(SDA_SignedAbsMax2, ".text")
#pragma CODE_SECTION(SDA_Min2, ".text")
#pragma CODE_SECTION(SDA_AbsMin2, ".text")
#pragma CODE_SECTION(SDA_SignedAbsMin2, ".text")
#pragma CODE_SECTION(SDA_PeakHold, ".text")
#pragma CODE_SECTION(SDA_PeakHoldPerSample, ".text")
#pragma CODE_SECTION(SDA_DetectFirstPeakOverThreshold, ".text")
#pragma CODE_SECTION(SDS_Round, ".text")
#pragma CODE_SECTION(SDA_Round, ".text")
#pragma CODE_SECTION(SDA_Clip, ".text")
#pragma CODE_SECTION(SDA_Threshold, ".text")
#pragma CODE_SECTION(SDA_SoftThreshold, ".text")
#pragma CODE_SECTION(SDA_ThresholdAndClamp, ".text")
#pragma CODE_SECTION(SDA_TestOverThreshold, ".text")
#pragma CODE_SECTION(SDA_TestAbsOverThreshold, ".text")
#pragma CODE_SECTION(SDA_Clamp, ".text")
#pragma CODE_SECTION(SDA_SelectMax, ".text")
#pragma CODE_SECTION(SDA_SelectMin, ".text")
#pragma CODE_SECTION(SDA_SelectMagnitudeSquaredMax, ".text")
#pragma CODE_SECTION(SDA_SelectMagnitudeSquaredMin, ".text")
#pragma CODE_SECTION(SDA_SetMinValue, ".text")
#pragma CODE_SECTION(SDA_PeakToAverageRatio, ".text")
#pragma CODE_SECTION(SDA_PeakToAveragePowerRatio, ".text")
#pragma CODE_SECTION(SDA_PeakToAveragePowerRatioDB, ".text")
#pragma CODE_SECTION(SDA_PeakToAverageRatioComplex, ".text")
#pragma CODE_SECTION(SDA_PeakToAveragePowerRatioComplex, ".text")
#pragma CODE_SECTION(SDA_PeakToAveragePowerRatioComplexDB, ".text")
#pragma CODE_SECTION(SDA_MovePeakTowardsDeadBand, ".text")
#pragma CODE_SECTION(SIF_Envelope, ".text")
#pragma CODE_SECTION(SDS_Envelope, ".text")
#pragma CODE_SECTION(SDA_Envelope, ".text")
#pragma CODE_SECTION(SIF_EnvelopeRMS, ".text")
#pragma CODE_SECTION(SDS_EnvelopeRMS, ".text")
#pragma CODE_SECTION(SDA_EnvelopeRMS, ".text")
#pragma CODE_SECTION(SIF_EnvelopeHilbert, ".text")
#pragma CODE_SECTION(SDS_EnvelopeHilbert, ".text")
#pragma CODE_SECTION(SDA_EnvelopeHilbert, ".text")
/* smath.c */
#pragma CODE_SECTION(SDA_Divide, ".text")
#pragma CODE_SECTION(SDA_Divide2, ".text")
#pragma CODE_SECTION(SDA_Multiply, ".text")
#pragma CODE_SECTION(SDA_Multiply2, ".text")
#pragma CODE_SECTION(SDS_ComplexMultiply, ".text")
#pragma CODE_SECTION(SDS_ComplexInverse, ".text")
#pragma CODE_SECTION(SDS_ComplexDivide, ".text")
#pragma CODE_SECTION(SDA_ComplexScalarMultiply, ".text")
#pragma CODE_SECTION(SDA_ComplexMultiply2, ".text")
#pragma CODE_SECTION(SDA_ComplexScalarDivide, ".text")
#pragma CODE_SECTION(SDA_ComplexDivide2, ".text")
#pragma CODE_SECTION(SDA_RealDotProduct, ".text")
#pragma CODE_SECTION(SDA_ComplexDotProduct, ".text")
#pragma CODE_SECTION(SDA_Add2, ".text")
#pragma CODE_SECTION(SDA_Add3, ".text")
#pragma CODE_SECTION(SDA_Add4, ".text")
#pragma CODE_SECTION(SDA_Add5, ".text")
#pragma CODE_SECTION(SDA_WeightedSum, ".text")
#pragma CODE_SECTION(SDA_Subtract2, ".text")
#pragma CODE_SECTION(SDA_Offset, ".text")
#pragma CODE_SECTION(SDA_PositiveOffset, ".text")
#pragma CODE_SECTION(SDA_NegativeOffset, ".text")
#pragma CODE_SECTION(SDA_Negate, ".text")
#pragma CODE_SECTION(SDA_Inverse, ".text")
#pragma CODE_SECTION(SDA_Square, ".text")
#pragma CODE_SECTION(SDA_Sqrt, ".text")
#pragma CODE_SECTION(SDA_Difference, ".text")
#pragma CODE_SECTION(SDA_SumOfDifferences, ".text")
#pragma CODE_SECTION(SDS_Roots, ".text")
#pragma CODE_SECTION(SDS_Factorial, ".text")
#pragma CODE_SECTION(SDS_Permutations, ".text")
#pragma CODE_SECTION(SDS_Combinations, ".text")
#pragma CODE_SECTION(SIF_OverlapAndAddLinear, ".text")
#pragma CODE_SECTION(SDA_OverlapAndAddLinear, ".text")
#pragma CODE_SECTION(SDA_OverlapAndAddLinearWithClip, ".text")
#pragma CODE_SECTION(SDA_OverlapAndAddArbitrary, ".text")
#pragma CODE_SECTION(SDA_OverlapAndAddArbitraryWithClip, ".text")
#pragma CODE_SECTION(SDS_DegreesToRadians, ".text")
#pragma CODE_SECTION(SDA_DegreesToRadians, ".text")
#pragma CODE_SECTION(SDS_RadiansToDegrees, ".text")
#pragma CODE_SECTION(SDA_RadiansToDegrees, ".text")
/* dsputils.c */
#pragma CODE_SECTION(SDA_Rotate, ".text")
#pragma CODE_SECTION(SDA_Reverse, ".text")
#pragma CODE_SECTION(SDA_Scale, ".text")
#pragma CODE_SECTION(SDA_MeanSquare, ".text")
#pragma CODE_SECTION(SDA_MeanSquareError, ".text")
#pragma CODE_SECTION(SDA_RootMeanSquare, ".text")
#pragma CODE_SECTION(SDA_Magnitude, ".text")
#pragma CODE_SECTION(SDA_MagnitudeSquared, ".text")
#pragma CODE_SECTION(SDS_Magnitude, ".text")
#pragma CODE_SECTION(SDS_MagnitudeSquared, ".text")
#pragma CODE_SECTION(SDS_Phase, ".text")
#pragma CODE_SECTION(SDA_PhaseWrapped, ".text")
#pragma CODE_SECTION(SDA_PhaseUnWrapped, ".text")
#pragma CODE_SECTION(SDA_MagnitudeAndPhaseWrapped, ".text")
#pragma CODE_SECTION(SDA_MagnitudeAndPhaseUnWrapped, ".text")
#pragma CODE_SECTION(SDA_MagnitudeSquaredAndPhaseWrapped, ".text")
#pragma CODE_SECTION(SDA_MagnitudeSquaredAndPhaseUnWrapped, ".text")
#pragma CODE_SECTION(SDA_PhaseWrap, ".text")
#pragma CODE_SECTION(SDA_PhaseUnWrap, ".text")
#pragma CODE_SECTION(SDS_Log2, ".text")
#pragma CODE_SECTION(SDA_Copy, ".text")
#pragma CODE_SECTION(SDA_CopyWithStride, ".text")
#pragma CODE_SECTION(SIF_CopyWithOverlap, ".text")
#pragma CODE_SECTION(SDA_CopyWithOverlap, ".text")
#pragma CODE_SECTION(SDA_20Log10, ".text")
#pragma CODE_SECTION(SDA_10Log10, ".text")
#pragma CODE_SECTION(SDA_LogMagnitude, ".text")
#pragma CODE_SECTION(SDA_LogMagnitudeAndPhaseWrapped, ".text")
#pragma CODE_SECTION(SDA_LogMagnitudeAndPhaseUnWrapped, ".text")
#pragma CODE_SECTION(SDA_Lengthen, ".text")
#pragma CODE_SECTION(SDA_Shorten, ".text")
#pragma CODE_SECTION(SIF_ReSize, ".text")
#pragma CODE_SECTION(SDA_ReSize, ".text")
#pragma CODE_SECTION(SDA_ReSizeInput, ".text")
#pragma CODE_SECTION(SDA_ReSizeOutput, ".text")
#pragma CODE_SECTION(SDA_Fill, ".text")
#pragma CODE_SECTION(SDA_Clear, ".text")
#pragma CODE_SECTION(SDA_Histogram, ".text")
#pragma CODE_SECTION(SDA_HistogramCumulative, ".text")
#pragma CODE_SECTION(SDA_HistogramExtended, ".text")
#pragma CODE_SECTION(SDA_HistogramExtendedCumulative, ".text")
#pragma CODE_SECTION(SIF_Histogram, ".text")
#pragma CODE_SECTION(SDA_HistogramEqualize, ".text")
#pragma CODE_SECTION(SDA_Quantize, ".text")
#pragma CODE_SECTION(SDA_Abs, ".text")
#pragma CODE_SECTION(SDS_PeakValueToBits, ".text")
#pragma CODE_SECTION(SDS_BitsToPeakValue, ".text")
#pragma CODE_SECTION(SDS_LinearTodBm, ".text")
#pragma CODE_SECTION(SDA_LinearTodBm, ".text")
#pragma CODE_SECTION(SDS_dBmToLinear, ".text")
#pragma CODE_SECTION(SDA_dBmToLinear, ".text")
#pragma CODE_SECTION(SDS_Compare, ".text")
#pragma CODE_SECTION(SDA_Compare, ".text")
#pragma CODE_SECTION(SDS_CompareComplex, ".text")
#pragma CODE_SECTION(SDA_CompareComplex, ".text")
#pragma CODE_SECTION(SDS_Int, ".text")
#pragma CODE_SECTION(SDS_Frac, ".text")
#pragma CODE_SECTION(SDS_AbsFrac, ".text")
#pragma CODE_SECTION(SDA_Int, ".text")
#pragma CODE_SECTION(SDA_Frac, ".text")
#pragma CODE_SECTION(SDA_AbsFrac, ".text")
#pragma CODE_SECTION(SDA_SetRange, ".text")
#pragma CODE_SECTION(SDA_SetMean, ".text")
/* dsputil2.c */
#pragma CODE_SECTION(SDA_RealSpectralInverse, ".text")
#pragma CODE_SECTION(SDA_ComplexSpectralInverse, ".text")
#pragma CODE_SECTION(SDA_FdInterpolate, ".text")
#pragma CODE_SECTION(SDA_FdInterpolate2, ".text")
#pragma CODE_SECTION(SDS_TdPitchShift, ".text")
#pragma CODE_SECTION(SDA_TdPitchShift, ".text")
#pragma CODE_SECTION(SDS_EchoGenerate, ".text")
#pragma CODE_SECTION(SDA_Power, ".text")
#pragma CODE_SECTION(SDS_Polynomial, ".text")
#pragma CODE_SECTION(SDA_Polynomial, ".text")
#pragma CODE_SECTION(SDS_Modulo, ".text")
#pragma CODE_SECTION(SDA_Modulo, ".text")
#pragma CODE_SECTION(SDA_AgcPeak, ".text")
#pragma CODE_SECTION(SIF_AgcMeanAbs, ".text")
#pragma CODE_SECTION(SDA_AgcMeanAbs, ".text")
#pragma CODE_SECTION(SIF_AgcMeanSquared, ".text")
#pragma CODE_SECTION(SDA_AgcMeanSquared, ".text")
#pragma CODE_SECTION(SDA_GroupDelay, ".text")
#pragma CODE_SECTION(SDA_ZeroCrossingDetect, ".text")
#pragma CODE_SECTION(SDS_ZeroCrossingDetect, ".text")
#pragma CODE_SECTION(SDA_FirstZeroCrossingLocation, ".text")
#pragma CODE_SECTION(SDA_ZeroCrossingCount, ".text")
#pragma CODE_SECTION(SDA_LevelCrossingDetect, ".text")
#pragma CODE_SECTION(SDS_LevelCrossingDetect, ".text")
#pragma CODE_SECTION(SDA_FirstLevelCrossingLocation, ".text")
#pragma CODE_SECTION(SDA_LevelCrossingCount, ".text")
#pragma CODE_SECTION(SDA_Trigger, ".text")
#pragma CODE_SECTION(SDA_ClearLocation, ".text")
#pragma CODE_SECTION(SDA_SetLocation, ".text")
#pragma CODE_SECTION(SDA_SortMinToMax, ".text")
#pragma CODE_SECTION(SDA_SortMaxToMin, ".text")
#pragma CODE_SECTION(SDS_CountOneBits, ".text")
#pragma CODE_SECTION(SDS_CountZeroBits, ".text")
#pragma CODE_SECTION(SDS_CountLeadingOneBits, ".text")
#pragma CODE_SECTION(SDS_CountLeadingZeroBits, ".text")
#pragma CODE_SECTION(SDA_Sign, ".text")
#pragma CODE_SECTION(SDA_Swap, ".text")
#pragma CODE_SECTION(SUF_ModuloIncrement, ".text")
#pragma CODE_SECTION(SUF_ModuloDecrement, ".text")
#pragma CODE_SECTION(SUF_IndexModuloIncrement, ".text")
#pragma CODE_SECTION(SUF_IndexModuloDecrement, ".text")
#pragma CODE_SECTION(SDA_Find, ".text")
#pragma CODE_SECTION(SDA_FindValue, ".text")
/* dsputil3.c */
#pragma CODE_SECTION(SIF_DeGlitch, ".text")
#pragma CODE_SECTION(SDS_DeGlitch, ".text")
#pragma CODE_SECTION(SDA_DeGlitch, ".text")
#pragma CODE_SECTION(SDA_RemoveDuplicates , ".text")
#pragma CODE_SECTION(SDA_FindAllDuplicates , ".text")
#pragma CODE_SECTION(SDA_FindFirstDuplicates , ".text")
#pragma CODE_SECTION(SDA_FindSortAllDuplicates , ".text")
#pragma CODE_SECTION(SDA_FindSortFirstDuplicates , ".text")
#pragma CODE_SECTION(SDA_LinearMicrophoneArrayBeamPattern , ".text")
/* datatype.c */
#pragma CODE_SECTION(SDA_SigLibDataToFix, ".text")
#pragma CODE_SECTION(SDA_FixToSigLibData, ".text")
#pragma CODE_SECTION(SDA_SigLibDataToImageData, ".text")
#pragma CODE_SECTION(SDA_ImageDataToSigLibData, ".text")
#pragma CODE_SECTION(SDA_SigLibDataToFix16, ".text")
#pragma CODE_SECTION(SDA_Fix16ToSigLibData, ".text")
#pragma CODE_SECTION(SDA_SigLibDataToFix32, ".text")
#pragma CODE_SECTION(SDA_Fix32ToSigLibData, ".text")
#pragma CODE_SECTION(SDS_SigLibDataToQFormatInteger, ".text")
#pragma CODE_SECTION(SDS_QFormatIntegerToSigLibData, ".text")
#pragma CODE_SECTION(SDA_SigLibDataToQFormatInteger, ".text")
#pragma CODE_SECTION(SDA_QFormatIntegerToSigLibData, ".text")
/* control.c */
#pragma CODE_SECTION(SDS_Pid, ".text")
#pragma CODE_SECTION(SDA_Pwm, ".text")
/* order.c */
#pragma CODE_SECTION(SDA_ExtractOrder, ".text")
#pragma CODE_SECTION(SDA_SumLevel, ".text")
#pragma CODE_SECTION(SDA_SumLevelWholeSpectrum, ".text")
#pragma CODE_SECTION(SIF_OrderAnalysis, ".text")
#pragma CODE_SECTION(SDA_OrderAnalysis, ".text")
/* stats.c */
#pragma CODE_SECTION(SDA_Sum, ".text")
#pragma CODE_SECTION(SDA_AbsSum, ".text")
#pragma CODE_SECTION(SDA_SumOfSquares, ".text")
#pragma CODE_SECTION(SDA_Mean, ".text")
#pragma CODE_SECTION(SDA_AbsMean, ".text")
#pragma CODE_SECTION(SDA_SubtractMean, ".text")
#pragma CODE_SECTION(SDA_SampleSd, ".text")
#pragma CODE_SECTION(SDA_PopulationSd, ".text")
#pragma CODE_SECTION(SDA_UnbiasedVariance, ".text")
#pragma CODE_SECTION(SDA_Median, ".text")
/* regress.c */
#pragma CODE_SECTION(SDA_LinraConstantCoeff, ".text")
#pragma CODE_SECTION(SDA_LinraRegressionCoeff, ".text")
#pragma CODE_SECTION(SDA_LinraCorrelationCoeff, ".text")
#pragma CODE_SECTION(SDA_LinraEstimateX, ".text")
#pragma CODE_SECTION(SDA_LinraEstimateY, ".text")
#pragma CODE_SECTION(SDA_LograConstantCoeff, ".text")
#pragma CODE_SECTION(SDA_LograRegressionCoeff, ".text")
#pragma CODE_SECTION(SDA_LograCorrelationCoeff, ".text")
#pragma CODE_SECTION(SDA_LograEstimateX, ".text")
#pragma CODE_SECTION(SDA_LograEstimateY, ".text")
#pragma CODE_SECTION(SDA_ExpraConstantCoeff, ".text")
#pragma CODE_SECTION(SDA_ExpraRegressionCoeff, ".text")
#pragma CODE_SECTION(SDA_ExpraCorrelationCoeff, ".text")
#pragma CODE_SECTION(SDA_ExpraEstimateX, ".text")
#pragma CODE_SECTION(SDA_ExpraEstimateY, ".text")
#pragma CODE_SECTION(SDA_PowraConstantCoeff, ".text")
#pragma CODE_SECTION(SDA_PowraRegressionCoeff, ".text")
#pragma CODE_SECTION(SDA_PowraCorrelationCoeff, ".text")
#pragma CODE_SECTION(SDA_PowraEstimateX, ".text")
#pragma CODE_SECTION(SDA_PowraEstimateY, ".text")
#pragma CODE_SECTION(SDA_Detrend, ".text")
#pragma CODE_SECTION(SDA_ExtractTrend, ".text")
/* trig.c */
#pragma CODE_SECTION(SDA_Sin, ".text")
#pragma CODE_SECTION(SDA_Cos, ".text")
#pragma CODE_SECTION(SDA_Tan, ".text")
#pragma CODE_SECTION(SIF_FastSin, ".text")
#pragma CODE_SECTION(SDA_FastSin, ".text")
#pragma CODE_SECTION(SDS_FastSin, ".text")
#pragma CODE_SECTION(SIF_FastCos, ".text")
#pragma CODE_SECTION(SDA_FastCos, ".text")
#pragma CODE_SECTION(SDS_FastCos, ".text")
#pragma CODE_SECTION(SIF_FastSinCos, ".text")
#pragma CODE_SECTION(SDA_FastSinCos, ".text")
#pragma CODE_SECTION(SDS_FastSinCos, ".text")
#pragma CODE_SECTION(SIF_QuickSin, ".text")
#pragma CODE_SECTION(SDA_QuickSin, ".text")
#pragma CODE_SECTION(SDS_QuickSin, ".text")
#pragma CODE_SECTION(SIF_QuickCos, ".text")
#pragma CODE_SECTION(SDA_QuickCos, ".text")
#pragma CODE_SECTION(SDS_QuickCos, ".text")
#pragma CODE_SECTION(SIF_QuickSinCos, ".text")
#pragma CODE_SECTION(SDA_QuickSinCos, ".text")
#pragma CODE_SECTION(SDS_QuickSinCos, ".text")
#pragma CODE_SECTION(SIF_QuickTan, ".text")
#pragma CODE_SECTION(SDA_QuickTan, ".text")
#pragma CODE_SECTION(SDS_QuickTan, ".text")
#pragma CODE_SECTION(SDA_Sinc, ".text")
#pragma CODE_SECTION(SDS_Sinc, ".text")
/* complex.c */
#pragma CODE_SECTION(SCV_Polar, ".text")
#pragma CODE_SECTION(SCV_Rectangular, ".text")
#pragma CODE_SECTION(SCV_PolarToRectangular, ".text")
#pragma CODE_SECTION(SCV_RectangularToPolar, ".text")
#pragma CODE_SECTION(SCV_Sqrt, ".text")
#pragma CODE_SECTION(SCV_Inverse, ".text")
#pragma CODE_SECTION(SCV_Conjugate, ".text")
#pragma CODE_SECTION(SCV_Magnitude, ".text")
#pragma CODE_SECTION(SCV_MagnitudeSquared, ".text")
#pragma CODE_SECTION(SCV_Phase, ".text")
#pragma CODE_SECTION(SCV_Multiply, ".text")
#pragma CODE_SECTION(SCV_Divide, ".text")
#pragma CODE_SECTION(SCV_Add, ".text")
#pragma CODE_SECTION(SCV_Subtract, ".text")
#pragma CODE_SECTION(SCV_Log, ".text")
#pragma CODE_SECTION(SCV_Exp, ".text")
#pragma CODE_SECTION(SCV_Expj, ".text")
#pragma CODE_SECTION(SCV_Pow, ".text")
#pragma CODE_SECTION(SCV_VectorAddScalar, ".text")
#pragma CODE_SECTION(SCV_VectorSubtractScalar, ".text")
#pragma CODE_SECTION(SCV_VectorMultiplyScalar, ".text")
#pragma CODE_SECTION(SCV_VectorDivideScalar, ".text")
#pragma CODE_SECTION(SCV_ScalarSubtractVector, ".text")
#pragma CODE_SECTION(SCV_Roots, ".text")
#pragma CODE_SECTION(SCV_Copy, ".text")
#pragma CODE_SECTION(SCV_Compare, ".text")
/* complexa.c */
#pragma CODE_SECTION(SDA_CreateComplexRect, ".text")
#pragma CODE_SECTION(SDA_CreateComplexPolar, ".text")
#pragma CODE_SECTION(SDA_ExtractComplexRect, ".text")
#pragma CODE_SECTION(SDA_ExtractComplexPolar, ".text")
#pragma CODE_SECTION(SDA_ClearComplexRect, ".text")
#pragma CODE_SECTION(SDA_ClearComplexPolar, ".text")
#pragma CODE_SECTION(SDA_FillComplexRect, ".text")
#pragma CODE_SECTION(SDA_FillComplexPolar, ".text")
#pragma CODE_SECTION(SDA_ComplexRectangularToPolar, ".text")
#pragma CODE_SECTION(SDA_ComplexPolarToRectangular, ".text")
#pragma CODE_SECTION(SDA_RectangularToPolar, ".text")
#pragma CODE_SECTION(SDA_PolarToRectangular, ".text")
#pragma CODE_SECTION(SDA_ComplexSqrt, ".text")
#pragma CODE_SECTION(SDA_ComplexInverse, ".text")
#pragma CODE_SECTION(SDA_ComplexConjugate, ".text")
#pragma CODE_SECTION(SDA_ComplexMagnitude, ".text")
#pragma CODE_SECTION(SDA_ComplexMagnitudeSquared, ".text")
#pragma CODE_SECTION(SDA_ComplexPhase, ".text")
#pragma CODE_SECTION(SDA_ComplexMultiply, ".text")
#pragma CODE_SECTION(SDA_ComplexDivide, ".text")
#pragma CODE_SECTION(SDA_ComplexAdd, ".text")
#pragma CODE_SECTION(SDA_ComplexSubtract, ".text")
#pragma CODE_SECTION(SDA_ComplexLog, ".text")
#pragma CODE_SECTION(SDA_ComplexExp, ".text")
#pragma CODE_SECTION(SDA_ComplexExpj, ".text")
#pragma CODE_SECTION(SDA_ComplexPow, ".text")
#pragma CODE_SECTION(SDA_ComplexVectorAddScalar, ".text")
#pragma CODE_SECTION(SDA_ComplexVectorSubtractScalar, ".text")
#pragma CODE_SECTION(SDA_ComplexVectorMultiplyScalar, ".text")
#pragma CODE_SECTION(SDA_ComplexVectorDivideScalar, ".text")
#pragma CODE_SECTION(SDA_ComplexScalarSubtractVector, ".text")
#pragma CODE_SECTION(SDA_ComplexRectangularLinearInterpolate, ".text")
#pragma CODE_SECTION(SDA_ComplexPolarLinearInterpolate, ".text")
/* matrix.c */
#pragma CODE_SECTION(SMX_Transpose, ".text")
#pragma CODE_SECTION(SMX_Multiply, ".text")
#pragma CODE_SECTION(SMX_CreateIdentity, ".text")
#pragma CODE_SECTION(SMX_Inverse2x2, ".text")
#pragma CODE_SECTION(SMX_ComplexInverse2x2, ".text")
#pragma CODE_SECTION(SMX_Inverse, ".text")
#pragma CODE_SECTION(SMX_LuDecompose, ".text")
#pragma CODE_SECTION(SMX_LuSolve, ".text")
#pragma CODE_SECTION(SMX_Determinant, ".text")
#pragma CODE_SECTION(SMX_LuDeterminant, ".text")
#pragma CODE_SECTION(SMX_RotateClockwise, ".text")
#pragma CODE_SECTION(SMX_RotateAntiClockwise, ".text")
#pragma CODE_SECTION(SMX_Reflect, ".text")
#pragma CODE_SECTION(SMX_Flip, ".text")
#pragma CODE_SECTION(SMX_InsertRow, ".text")
#pragma CODE_SECTION(SMX_ExtractRow, ".text")
#pragma CODE_SECTION(SMX_InsertColumn, ".text")
#pragma CODE_SECTION(SMX_ExtractColumn, ".text")
#pragma CODE_SECTION(SMX_InsertNewRow, ".text")
#pragma CODE_SECTION(SMX_DeleteOldRow, ".text")
#pragma CODE_SECTION(SMX_InsertNewColumn, ".text")
#pragma CODE_SECTION(SMX_DeleteOldColumn, ".text")
#pragma CODE_SECTION(SMX_InsertRegion, ".text")
#pragma CODE_SECTION(SMX_ExtractRegion, ".text")
#pragma CODE_SECTION(SMX_InsertDiagonal, ".text")
#pragma CODE_SECTION(SMX_ExtractDiagonal, ".text")
#pragma CODE_SECTION(SMX_SwapRows, ".text")
#pragma CODE_SECTION(SMX_SwapColumns, ".text")
#pragma CODE_SECTION(SMX_Sum, ".text")

#endif                      /* End of #ifndef __cplusplus */

#endif                      /* End of #ifdef _TMS320C6X - Defined by TI compiler */

#endif                      /* End of #if _SIGLIB_MEMORY_SECTIONS_H */

#endif                      /* End of #if SIGLIB */


/* End of siglib_memory_sections.h */

